{"version":3,"sources":["jquery.in-viewport-class.js"],"names":["global","factory","define","amd","$","document","exports","module","require","jQuery","window","undefined","pluginName","defaultOptions","$window","$document","p","el","opts","extend","_defaultOptions","$el","$elements","init","find","tellMeClass","each","index","element","push","on","update","viewportTop","scrollTop","viewportBottom","outerHeight","forEach","$element","length","isInViewport","hasClass","inViewClass","addClass","onceInViewClass","removeClass","wasInViewClass","elmTop","offset","top","elmBottom","fn","options","data","inViewportClass"],"mappings":"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","file":"jquery.in-viewport-class.js","sourcesContent":["/*jshint esversion: 6 */\n\n(function(global, factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], function($) {\n            return factory($, global, global.document);\n        });\n    } else if (typeof exports === \"object\" && exports) {\n        module.exports = factory(require('jquery'), global, global.document);\n    } else {\n        factory(jQuery, global, global.document);\n    }\n})(typeof window !== 'undefined' ? window : this, function($, window, document, undefined) {\n    'use strict';\n\n    const pluginName = 'inViewportClass';\n\n    // -- Globals (shared across all plugin instances)\n    const defaultOptions = {\n        'tellMeClass': 'i-v',\n        'inViewClass': 'in-viewport',\n        'onceInViewClass': 'in-viewport-once',\n        'wasInViewClass': 'was-in-viewport'\n    };\n\n    const $window = $(window);\n    const $document = $(document);\n\n    const p = {}; p[pluginName] = class {\n        constructor (el, opts) {\n            this.el = el;\n            this.opts = $.extend({}, defaultOptions, opts);\n\n            this._defaultOptions = defaultOptions;\n            this.$el = $(this.el);\n\n            this.$elements = [];\n\n            this.init();\n        }\n\n        init () {\n\n            this.$el.find(`.${this.opts.tellMeClass}`).each((index, element) => {\n                this.$elements.push($(element));\n            });\n\n            $window.on('resize scroll', event => {\n                this.update();\n            });\n\n            this.update();\n        }\n\n        update() {\n            let viewportTop = $window.scrollTop();\n            let viewportBottom = viewportTop + $window.outerHeight();\n\n            this.$elements.forEach($element => {\n                if ($element.length === 0) {\n                    return;\n                }\n\n                if (this.isInViewport($element, viewportTop, viewportBottom) === true) {\n                    if (!$element.hasClass(this.opts.inViewClass)) {\n                        $element.addClass(this.opts.inViewClass);\n\n                        if (!$element.hasClass(this.opts.onceInViewClass)) {\n                            $element.addClass(this.opts.onceInViewClass);\n                        }\n                    }\n                } else {\n                    if ($element.hasClass(this.opts.inViewClass)) {\n                        $element.removeClass(this.opts.inViewClass);\n                        $element.addClass(this.opts.wasInViewClass);\n                    }\n                }\n            });\n        }\n\n        isInViewport($element, viewportTop, viewportBottom) {\n            let elmTop = $element.offset().top;\n            let elmBottom = elmTop + $element.outerHeight();\n            if (elmBottom >= viewportTop && elmTop < viewportBottom) return true;\n            return false;\n        }\n    };\n\n    $.fn[pluginName] = function(options) {\n        return this.each(function () {\n            if (!$.data(this, 'plugin_'+ pluginName)) {\n                $.data(this, 'plugin_'+ pluginName, new p[pluginName](this, options));\n            }\n        });\n    };\n});\n\njQuery(() => {\n    $(document).inViewportClass();\n});\n"]}