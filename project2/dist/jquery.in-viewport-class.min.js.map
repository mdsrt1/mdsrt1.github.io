{"version":3,"sources":["jquery.in-viewport-class.min.js"],"names":["global","factory","define","amd","$","document","exports","_typeof","module","require","jQuery","window","undefined","pluginName","defaultOptions","inViewClass","onceInViewClass","wasInViewClass","$window","p","_class","el","opts","_classCallCheck","this","extend","_defaultOptions","$elements","init","_createClass","key","value","_this","$el","find","tellMeClass","each","index","element","event","update","_this2","viewportTop","scrollTop","viewportBottom","outerHeight","$element","length","isInViewport","hasClass","addClass","elmTop","fn","options","removeClass","inViewportClass"],"mappings":"glBAEA,SAAUA,EAAQC,GAEQ,mBAAXC,QAAyBA,OAAOC,IACvCD,QAAQ,UAAW,SAASE,GACxB,OAAOH,EAAQG,EAAGJ,EAAQA,EAAOK,YAN7C,YAAA,oBAAAC,QAAA,YAAAC,QAAAD,WAAAA,QASQE,OAAOF,QAAUL,EAAQQ,QAAQ,UAAWT,EAAQA,EAAOK,UAN/DJ,EAAAS,OAAAV,EAAAA,EAAAK,UADJ,CAEQ,oBAAAM,OAAkBA,YAAtBC,EAAA,SAAgDR,EAAAO,EAAAN,EAAAO,GAG3C,IAFDC,EAAA,kBAGGC,GAGHb,YAAA,MACHc,YAAA,cACFC,gBAAkB,mBACjBC,eAAA,mBAYMC,EAAUd,EAAEO,GANdQ,GAFJf,EAAAC,OAEIc,EAAAN,GAAA,WACA,SAAAO,EAAAC,EAAeC,GAAAC,gBAAAC,KAAAJ,GACfI,KAAAH,GAAAA,EACAG,KAAAF,KAAAlB,EAAkBqB,UAAAX,EAAAQ,GAWdE,KAAKE,gBAAkBZ,EARzBI,KAAAA,IAAYP,EAAAA,KAAlBU,IAWQG,KAAKG,aAPTH,KAAAI,OAVA,OAAAC,aAAAT,IAAAU,IAAA,OAAAC,MAAA,WAWI,IAAAC,EAAAR,KAaAA,KAAKS,IAAIC,KAAT,IAAkBV,KAAKF,KAAKa,aAAeC,KAAK,SAACC,EAAOC,GAVxDN,EAAKN,UAAAA,KAAkBZ,EAAAA,MAGvBI,EAAKS,GAAAA,gBAAL,SAAAY,GAYIP,EAAKQ,WAGThB,KAAKgB,YAhCTV,IAAA,SAAAC,MAAA,WASU,IAAAU,EAAAjB,KAaFkB,EAAAxB,EAAAyB,YAeAC,EAAiBF,EAAcxB,EAAQ2B,cAZvCrB,KAAAG,UAAKA,QAAL,SAAAmB,GADJ,IAAAA,EAAAC,UAIA,IAAAN,EAAAO,aAAAF,EAAAJ,EAAAE,GAiBaE,EAASG,SAASR,EAAKnB,KAAKP,eAbpCyB,EAALU,SAAAT,EAAAnB,KAAAP,aAvBM+B,EAAAG,SAAAR,EAAAnB,KAAAN,kBAAA8B,EAAAI,SAAAT,EAAAnB,KAAAN,kBA2BF0B,EAAAA,SAAsBC,EAAAA,KAAR5B,eACd6B,EAAAA,YAAiBF,EAAAA,KAAcxB,aAkBvB4B,EAASI,SAAST,EAAKnB,KAAKL,uBAvD5Ca,IAAA,eAAAC,MAAA,SA4CQe,EAASE,EAAaF,GAClB,IAAAK,EAAAL,EAAKA,SAASG,IAmBtB,OAlBYH,EAASI,EAASL,eAkBbH,GAAeS,EAASP,MAhE7CxB,EAAA,GAoDShB,EAAAgD,GAAAvC,GARD,SAQOwC,GACH,OAAA7B,KAAAY,KAAA,WACIU,EAAAA,KAAAA,KAAAA,UAASQ,IACTR,EAAAA,KAAAA,KAAAA,UAASI,EAAS,IAAK5B,EAAKL,GAAAA,KAA5BoC,SA9CN3C,OAAA,WAAAN,EAAAC,UAAAkD","file":"jquery.in-viewport-class.min.js","sourcesContent":["/*jshint esversion: 6 */\n\n(function(global, factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], function($) {\n            return factory($, global, global.document);\n        });\n    } else if (typeof exports === \"object\" && exports) {\n        module.exports = factory(require('jquery'), global, global.document);\n    } else {\n        factory(jQuery, global, global.document);\n    }\n})(typeof window !== 'undefined' ? window : this, function($, window, document, undefined) {\n    'use strict';\n\n    const pluginName = 'inViewportClass';\n\n    // -- Globals (shared across all plugin instances)\n    const defaultOptions = {\n        'tellMeClass': 'i-v',\n        'inViewClass': 'in-viewport',\n        'onceInViewClass': 'in-viewport-once',\n        'wasInViewClass': 'was-in-viewport'\n    };\n\n    const $window = $(window);\n    const $document = $(document);\n\n    const p = {}; p[pluginName] = class {\n        constructor (el, opts) {\n            this.el = el;\n            this.opts = $.extend({}, defaultOptions, opts);\n\n            this._defaultOptions = defaultOptions;\n            this.$el = $(this.el);\n\n            this.$elements = [];\n\n            this.init();\n        }\n\n        init () {\n\n            this.$el.find(`.${this.opts.tellMeClass}`).each((index, element) => {\n                this.$elements.push($(element));\n            });\n\n            $window.on('resize scroll', event => {\n                this.update();\n            });\n\n            this.update();\n        }\n\n        update() {\n            let viewportTop = $window.scrollTop();\n            let viewportBottom = viewportTop + $window.outerHeight();\n\n            this.$elements.forEach($element => {\n                if ($element.length === 0) {\n                    return;\n                }\n\n                if (this.isInViewport($element, viewportTop, viewportBottom) === true) {\n                    if (!$element.hasClass(this.opts.inViewClass)) {\n                        $element.addClass(this.opts.inViewClass);\n\n                        if (!$element.hasClass(this.opts.onceInViewClass)) {\n                            $element.addClass(this.opts.onceInViewClass);\n                        }\n                    }\n                } else {\n                    if ($element.hasClass(this.opts.inViewClass)) {\n                        $element.removeClass(this.opts.inViewClass);\n                        $element.addClass(this.opts.wasInViewClass);\n                    }\n                }\n            });\n        }\n\n        isInViewport($element, viewportTop, viewportBottom) {\n            let elmTop = $element.offset().top;\n            let elmBottom = elmTop + $element.outerHeight();\n            if (elmBottom >= viewportTop && elmTop < viewportBottom) return true;\n            return false;\n        }\n    };\n\n    $.fn[pluginName] = function(options) {\n        return this.each(function () {\n            if (!$.data(this, 'plugin_'+ pluginName)) {\n                $.data(this, 'plugin_'+ pluginName, new p[pluginName](this, options));\n            }\n        });\n    };\n});\n\njQuery(() => {\n    $(document).inViewportClass();\n});\n"]}